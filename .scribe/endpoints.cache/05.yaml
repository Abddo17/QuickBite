## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Category Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all categories'
      description: 'Retrieves a list of all categories.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "categoryId": 1,
              "name": "Electronics",
              "created_at": "2025-05-19T17:58:00+01:00",
              "updated_at": "2025-05-19T17:58:00+01:00"
            },
            {
              "categoryId": 2,
              "name": "Clothing",
              "created_at": "2025-05-19T17:58:00+01:00",
              "updated_at": "2025-05-19T17:58:00+01:00"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: 'Stores a new category in the database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category (max 50 characters).'
        required: true
        example: Electronics
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Electronics
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "categoryId": 1,
            "name": "Electronics",
            "created_at": "2025-05-19T17:58:00+01:00",
            "updated_at": "2025-05-19T17:58:00+01:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{categoryId}'
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific category'
      description: 'Retrieves the details of a category by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categoryId:
        name: categoryId
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      categoryId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "categoryId": 1,
            "name": "Electronics",
            "created_at": "2025-05-19T17:58:00+01:00",
            "updated_at": "2025-05-19T17:58:00+01:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{categoryId}'
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: 'Updates the details of an existing category by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categoryId:
        name: categoryId
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      categoryId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category (max 50 characters).'
        required: true
        example: 'Updated Electronics'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Electronics'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "categoryId": 1,
            "name": "Updated Electronics",
            "created_at": "2025-05-19T17:58:00+01:00",
            "updated_at": "2025-05-19T17:59:00+01:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{categoryId}'
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a category'
      description: 'Removes a category from the database by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categoryId:
        name: categoryId
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      categoryId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
